#!/usr/bin/perl

=head1 NAME

mogupload -- Upload data to a MogileFS installation

=head1 SYNOPSIS

    $ mogupload [options]
    $ mogupload [options] --file="-" < filename

    $ mogupload --trackers=host --domain=foo --class=bar \
                --key="/hello.jpg" --file="input.jpg"

    $ echo "why hello" | mogupload [opts] --key="world" --file="-"

=head1 OPTIONS

=over

=item --trackers=host1:7001,host2:7001

Use these MogileFS trackers to negotiate with.

=item --domain=<domain>

Set the MogileFS domain to use.

=item --class=<class>

Set the class to use. Will use default class if not specified

=item --key="<key>"

A key to store the file under. Can be an arbitrary string.

=item --file="<filename|->"

A local file to upload. If '-', read file from STDIN instead.

=back

=head1 AUTHOR

Dormando E<lt>L<dormando@rydia.net>E<gt>

=head1 BUGS

mogupload must buffer the upload in memory before transferring it. This makes it difficult to upload very large files. Future versions will lift this limitation.

=head1 LICENSE

Licensed for use and redistribution under the same terms as Perl itself.

=cut

use strict;
use warnings;

use lib './lib';
use MogileFS::Utils;

my $util = MogileFS::Utils->new;
my $usage = "--trackers=host --domain=foo --key='/hello.jpg' --file='./hello.jpg'";
my $c = $util->getopts($usage, qw/class=s key=s file=s/);

my $mogc = $util->client;

my $filename = $c->{file};

my $fh;
my $size = 0;
if ($filename eq '-') {
    $fh = *STDIN;
} else {
    $size = -s $filename;
    die "Could not stat " . $filename unless defined $size;
    open($fh, "< $filename") or die "Could not open " . $filename;
}

my $mf = $mogc->new_file($c->{key}, $c->{class}, undef);
if ($mogc->errcode) {
    die "Error opening MogileFS file: " . $mogc->errstr;
}

my $buf;
while (my $read = read($fh, $buf, 1024 * 1024)) {
    die "error reading file" unless defined $read;
    $mf->print($buf);
}

unless ($mf->close) {
    die "Error writing file: " . $mogc->errcode . ": " . $mogc->errstr;
}
